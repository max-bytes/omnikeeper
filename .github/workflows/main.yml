name: CI

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+' 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-backend:
#    if: ${{ startsWith(github.ref, 'refs/tags/[0-9]+.[0-9]+.[0-9]+') }}
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set version
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/core/backend
          
      - name: Temp output
        run: |
            echo "***${{ env.VERSION }}***"
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: "./backend"
          file: "./backend/Omnikeeper/Dockerfile"
          push: true
          build-args: |
            version=${{ env.VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
#      - name: build backend
#        run: |
#          cd backend
#          echo "Building backend version $VERSION" 
#          echo "***${{ steps.meta.outputs.tags }}***"
#          echo "Building:"
#          docker build -t "${{ steps.meta.outputs.tags }}" -f ./Omnikeeper/Dockerfile --build-arg version=$VERSION .
#          #docker build -t $CI_REGISTRY/landscape/omnikeeper/backend:$VERSION -t $CI_REGISTRY/landscape/omnikeeper/backend:latest -f ./Omnikeeper/Dockerfile --build-arg version=$VERSION .
#          #docker push $CI_REGISTRY/landscape/omnikeeper/backend
