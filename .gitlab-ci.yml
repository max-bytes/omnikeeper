stages:
 - build
 - deploy

variables:
  DOCKER_DRIVER: overlay2

  # Variant TLS disabled: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-disabled
  #DOCKER_HOST: tcp://docker:2375/
  #DOCKER_TLS_CERTDIR: ""

  # Variant TLS enabled: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  # do not forget to adapt runners config.toml
  DOCKER_TLS_CERTDIR: "/certs"


build-backend:
  image: docker:stable
  stage: build
  when: manual
  tags:
    - dockerbuild
  services:
    - docker:19.03.1-dind
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  script:
    - "cd backend"
    - "docker build -t $CI_REGISTRY/landscape/registry/backend:latest -f ./LandscapeRegistry/Dockerfile ."
    - "docker push $CI_REGISTRY/landscape/registry/backend:latest"

build-frontend:
  image: docker:stable
  stage: build
  when: manual
  tags:
    - dockerbuild
  services:
    - docker:19.03.1-dind
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  script:
    - "cd frontend"
#    - "docker pull $CI_REGISTRY/landscape/registry/frontend:latest || true" # doesn't do much because our build image is doing the hard lifting, so having a cached final image doesn't help
# - "docker build --cache-from $CI_REGISTRY/landscape/registry/frontend:latest -t $CI_REGISTRY/landscape/registry/frontend:latest ."
    - "docker build -t $CI_REGISTRY/landscape/registry/frontend:latest ."
    - "docker push $CI_REGISTRY/landscape/registry/frontend:latest"
