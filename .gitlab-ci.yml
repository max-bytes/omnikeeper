stages:
 - build
 - deploy

variables:
  DOCKER_DRIVER: overlay2

  # Variant TLS disabled: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-disabled
  #DOCKER_HOST: tcp://docker:2375/
  #DOCKER_TLS_CERTDIR: ""

  # Variant TLS enabled: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  # do not forget to adapt runners config.toml
  DOCKER_TLS_CERTDIR: "/certs"

  NEXUS_USER: "svc_mhx_buildchain"
  #NEXUS_PASSWORD: "yoursecretsShouldNotBePlacedHere"
  NEXUS_BASEURL: "https://repo.mhx.at"



build-backend:
  image: docker:stable
  stage: build
  when: on_success
  tags:
    - dockerbuild
  services:
    - docker:19.03.1-dind
  only: 
    - tags
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  script:
    - "cd backend"
    - "VERSION=$CI_COMMIT_TAG" #$(git describe --tags --abbrev=0)"
    - echo "Building backend version $VERSION"
    - "docker build -t $CI_REGISTRY/landscape/omnikeeper/backend:$VERSION -t $CI_REGISTRY/landscape/omnikeeper/backend:latest -f ./Omnikeeper/Dockerfile --build-arg version=$VERSION ."
    - "docker push $CI_REGISTRY/landscape/omnikeeper/backend"

build-nuget-core-package:
  image: mcr.microsoft.com/dotnet/core/sdk:3.1-buster
  stage: build
  when: on_success
  tags:
    - dockerbuild
  services:
    - docker:19.03.1-dind
  only: 
    - tags
  script:
    - "VERSION=$CI_COMMIT_TAG"
    - echo "Building nuget package for core version $VERSION"
    - "dotnet pack backend/Omnikeeper.Base/Omnikeeper.Base.csproj /p:Version=${VERSION} -c Release"
    - "mv backend/Omnikeeper.Base/bin/Release/Omnikeeper.Base.${VERSION}.nupkg Omnikeeper.Base.nupkg"
  artifacts:
    paths:
      - Omnikeeper.Base.nupkg
    expire_in: 2 days

deploy-nuget-core-package:
  image: curlimages/curl:latest
  stage: deploy
  dependencies:
    - build-nuget-core-package
  script:
    - sh cicd/upload-nexus.sh Omnikeeper.Base.nupkg
  only: 
    - tags



build-frontend:
  image: docker:stable
  stage: build
  when: on_success
  tags:
    - dockerbuild
  services:
    - docker:19.03.1-dind
  only: 
    - tags
  before_script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  script:
    - "cd frontend"
    - "VERSION=$CI_COMMIT_TAG" #$(git describe --tags --abbrev=0)"
    - echo "Building frontend version $VERSION"
#    - "docker pull $CI_REGISTRY/landscape/omnikeeper/frontend:latest || true" # doesn't do much because our build image is doing the hard lifting, so having a cached final image doesn't help
# - "docker build --cache-from $CI_REGISTRY/landscape/omnikeeper/frontend:latest -t $CI_REGISTRY/landscape/omnikeeper/frontend:latest ."
    - "docker build -t $CI_REGISTRY/landscape/omnikeeper/frontend:$VERSION -t $CI_REGISTRY/landscape/omnikeeper/frontend:latest --build-arg version=$VERSION ."
    - "docker push $CI_REGISTRY/landscape/omnikeeper/frontend"
